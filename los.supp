# [TODO] global initialization
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_param_spec_pool_new
   fun:_l_object_init
}

# [TODO] class ref-counting and finalization...
{
   l_class_register
   Memcheck:Leak
   ...
   fun:l_object_class_register
}

# [TODO]
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_object_get_class
}

# # [TODO] same thing here
# {
#    <insert_a_suppression_name_here>
#    Memcheck:Leak
#    ...
#    fun:l_object_get_class
# }

# [TODO] LObject param pool
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_param_spec_pool_lookup
   ...
   fun:l_object_get_property
}
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_param_spec_pool_lookup
   ...
   fun:l_object_class_lookup_property
}

# trash allocation
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_trash_alloc
   ...
   fun:l_trash_push
}

# trash nodes allocation
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_trash_node_alloc
   ...
   fun:l_trash_add
}

# LNone singleton instantiation
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_none_ref
}

# strange mem-leak from g_slice_new, probably some debug-only stuff
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:smc_notify_alloc
   fun:g_slice_alloc
}

# [TODO] signals and handlers
{
   <insert_a_suppression_name_here>
   Memcheck:Leak
   match-leak-kinds: reachable
   ...
   fun:l_signal_connect
}

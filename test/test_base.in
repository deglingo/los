/* -*- c -*- */
header
{
##include "los/private.h"
##include "los/lbase.h"
##include <glib.h>
}

global_setup
{
  los_init();
}

test { PIF_CHECK(1); }

/* test /\* just some infos *\/ */
/* { */
/*   CL_DEBUG("gc-friendly:   %s", (g_mem_gc_friendly ? "yes" : "no")); */
/*   CL_DEBUG("system malloc: %s", (g_mem_is_system_malloc() ? "yes" : "no")); */
/* } */

/* test */
/* { */
/*   g_malloc(40); */
/* } */

header
{
  static GPrivate thread_priv = G_PRIVATE_INIT(g_free);
  static gpointer thread_func ( gpointer data )
  {
    g_private_set(&thread_priv, g_strdup("hello!"));
    return NULL;
  }
}

test
{
  gint i;
  for (i = 0; i < 10; i++)
    {
      GThread *t = g_thread_new("test-thread", thread_func, NULL);
      g_thread_join(t);
    }
}

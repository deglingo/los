/* -*- c -*- */

header {
##include "los/lfile.h"
##include <fcntl.h>
##include <unistd.h>
##include <string.h>
##include <sys/stat.h>
}

data
{
  gchar *tmpfile;
  LStream *stream;
}

setup
{
  gint fd;
  GError *err = NULL;
  if ((fd = g_file_open_tmp(NULL, &data->tmpfile, &err)) < 0)
    abort(); /* [FIXME] */
  close(fd);
}

teardown
{
  unlink(data->tmpfile);
}

/* [TODO] test_new */

#define CHECK_FILE(content) do {                    \
    struct stat st;                                 \
    gint64 cont_len = strlen(content);              \
    gchar *buf;                                     \
    FILE *f;                                        \
    if (stat(data->tmpfile, &st) != 0)              \
      abort(); /* [FIXME] */                        \
    PIF_CHECK(st.st_size == cont_len);              \
    if (!(f = fopen(data->tmpfile, "r")))           \
      abort(); /* [FIXME] */                        \
    buf = malloc(cont_len);                         \
    if (fread(buf, cont_len, 1, f) != 1)            \
      abort(); /* [FIXME] */                        \
    fclose(f);                                      \
    PIF_CHECK(!strncmp((content), buf, cont_len));  \
    free(buf);                                      \
  } while (0)

unit /* write */
{
  data { gint fd; }

  setup
    {
      if ((data->fd = open(data->tmpfile, O_WRONLY)) < 0)
        abort(); /* [FIXME] */
      if (!(data->stream = l_file_fdopen(data->fd, "w", &err)))
        abort(); /* [FIXME] */
    }

  teardown
    {
      /* [FIXME] close ? */
      L_OBJECT_CLEAR(data->stream);
    }

  test
    {
      GError *err = NULL;
      gint64 w = 0;
      PIF_CHECK(l_stream_write(data->stream, "AB", 2, &w, &err) == L_STREAM_STATUS_OK);
      PIF_CHECK(w == 2);
      /* [fixme] check content ? */
      PIF_CHECK(l_stream_write(data->stream, "CDEFGH", 6, &w, &err) == L_STREAM_STATUS_OK);
      PIF_CHECK(w == 6);
      l_stream_close(data->stream);
      CHECK_FILE("ABCDEFGH");
    }    
}

unit /* write */
{
  data { gint fd; }

  setup
    {
      FILE *f;
      if (!(f = fopen(data->tmpfile, "w")))
        abort(); /* [FIXME] */
      if (fwrite("IJKLMNOP", 8, 1, f) != 1)
        abort(); /* [FIXME] */
      fclose(f);
      if ((data->fd = open(data->tmpfile, O_RDONLY)) < 0)
        abort(); /* [FIXME] */
      if (!(data->stream = l_file_fdopen(data->fd, "r", &err)))
        abort(); /* [FIXME] */
    }

  teardown
    {
      /* [FIXME] close ? */
      L_OBJECT_CLEAR(data->stream);
    }

  test
    {
      GError *err = NULL;
      gint64 w = 0;
      gchar buf[6] = { 0, };
      PIF_CHECK(l_stream_read(data->stream, buf, 2, &w, &err) == L_STREAM_STATUS_OK);
      PIF_CHECK(w == 2);
      PIF_CHECK(!strncmp(buf, "IJ", 2));
      /* [fixme] check content ? */
      PIF_CHECK(l_stream_read(data->stream, buf, 6, &w, &err) == L_STREAM_STATUS_OK);
      PIF_CHECK(w == 6);
      PIF_CHECK(!strncmp(buf, "KLMNOP", 2));
      /* eof */
      PIF_CHECK(l_stream_read(data->stream, buf, 1, &w, &err) == L_STREAM_STATUS_EOF);
    }    
}
